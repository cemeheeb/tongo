package abi

// Code autogenerated. DO NOT EDIT.

import ()

var contractErrors = map[ContractInterface]map[int32]string{
	BidaskLpMultitoken: {83: "Insufficient gas for operation"},
	BidaskPool:         {83: "Insufficient gas for operation"},
	CoffeeCrossDex: {100: "Invalid payload to resent",
		101: "Dedust payload is empty",
		102: "ProxyTON payload is empty",
		200: "Not an admin",
	},
	CoffeeFactory: {250: "Unexpected",
		252: "Wrong sender",
		254: "Not an admin",
		255: "Wrong chain",
		256: "Wrong assets",
		257: "Same assets",
		258: "Wrong signature",
		267: "Invalid asset type",
	},
	CoffeeMevProtector: {100: "Empty tx to resend",
		101: "Dedust payload is empty",
		200: "Invalid jetton forward payload",
		201: "Invalid native payload",
		300: "Not an admin",
	},
	CoffeePool: {250: "Unexpected",
		252: "Wrong sender",
		255: "Wrong chain",
		256: "Wrong assets",
		258: "Wrong signature",
		262: "AMM failed",
		263: "Invalid AMM settings",
		264: "Invalid liquidity",
		265: "Invalid fee",
		266: "Invalid condition",
		267: "Invalid asset type",
		268: "Deadline exceeded",
		269: "Slippage tolerated",
		270: "Pool already exists",
		271: "Reserves ratio failed",
		272: "Already active",
		273: "Not active",
	},
	CoffeeStakingItem: {99: "Not initialized",
		100: "Already initialized",
		500: "Too early to unlock",
		501: "Too late to extend",
		502: "Zero points",
	},
	CoffeeStakingMaster: {81: "Unknown jetton wallet",
		99:  "Not initialized",
		100: "Already initialized",
		110: "Mismatching duration",
		111: "Zero reward rate",
		200: "Token not distributed",
	},
	CoffeeStakingVault: {80: "Invalid amount",
		82:  "Invalid dictionary value",
		99:  "Not initialized",
		100: "Already initialized",
		403: "Unauthorized access",
		503: "Wrong period",
		504: "Unexpected forward opcode",
	},
	CoffeeVault: {250: "Unexpected",
		252: "Wrong sender",
		253: "Not a factory",
		255: "Wrong chain",
		256: "Wrong assets",
		257: "Same assets",
		258: "Wrong signature",
		259: "Invalid balance",
		267: "Invalid asset type",
	},
	CoffeeVaultJetton: {260: "Invalid jetton master",
		272: "Already active",
		273: "Not active",
	},
	MultisigOrderV2: {104: "Unauthorized init",
		105:   "Already inited",
		106:   "Unauthorized sign",
		107:   "Already approved",
		111:   "Expired",
		112:   "Already executed",
		65535: "Unknown op",
	},
	MultisigV2: {100: "Not enough ton",
		101:  "Unauthorized execute",
		102:  "Signers outdated",
		103:  "Invalid dictionary sequence",
		108:  "Inconsistent data",
		109:  "Invalid threshold",
		110:  "Invalid signers",
		111:  "Expired",
		1007: "Unauthorized proposer",
		1008: "Invalid new order",
	},
	NftAuctionGetgemsV3: {403: "Unauthorized address",
		1000:  "Low bid",
		1001:  "Already initiated",
		1002:  "Invalid op, expect ownership_assigned",
		1003:  "Invalid op, expect ownership_assigned",
		1005:  "Already executed",
		1006:  "Already activated",
		1008:  "Not enough TONs",
		1009:  "Already has bid",
		1010:  "Auction in progress",
		65535: "Unknown operation",
	},
	NftAuctionGetgemsV4: {403: "Unauthorized address",
		1000:  "Low bid",
		1001:  "Already initiated",
		1002:  "Invalid op, expect ownership_assigned",
		1003:  "Invalid op, expect ownership_assigned",
		1005:  "Already executed",
		1006:  "Already activated",
		1008:  "Not enough TONs",
		1009:  "Already has bid",
		1010:  "Auction in progress",
		1014:  "Auction is in a broken state: auction duration is too long",
		1015:  "Auction has not been activated yet",
		1016:  "Auction is in a broken state",
		1017:  "Wrong currency",
		65535: "Unknown operation",
	},
	NftSaleGetgemsV2: {404: "Already sold or cancelled",
		450:   "Not enough TONs for sale",
		457:   "Not enough TONs for cancellation",
		458:   "Unauthorized cancellation",
		500:   "Unauthorized initiation",
		501:   "Invalid op, expected ownership_assigned",
		65535: "Unknown operation",
	},
	NftSaleGetgemsV3: {404: "Already sold or cancelled",
		405:   "Mode 32 not allowed",
		406:   "Can't execute command at this time",
		408:   "Inconsistent price and fees",
		409:   "Inconsistent price and fees",
		410:   "Inconsistent price and fees",
		450:   "Not enough TONs for sale",
		457:   "Not enough TONs for cancellation",
		458:   "Unauthorized cancellation",
		500:   "Unauthorized initiation",
		501:   "Invalid op, expected ownership_assigned",
		65535: "Unknown operation",
	},
	NftSaleGetgemsV4: {404: "Already sold or cancelled",
		405:   "Mode 32 not allowed",
		406:   "Can't execute command at this time",
		408:   "Inconsistent price and fees",
		409:   "Inconsistent price and fees",
		410:   "Inconsistent price and fees",
		450:   "Not enough TONs for sale",
		451:   "This sale is broken: royalty, fee, or profit is less than zero",
		457:   "Not enough TONs for cancellation",
		458:   "Unauthorized cancellation",
		459:   "This sale is only for a jetton",
		500:   "Unauthorized initiation",
		501:   "Invalid op, expected ownership_assigned",
		4501:  "Not enough funds for sale",
		65535: "Unknown operation",
	},
	SmartAccount: {158: "Invalid amm address",
		170:   "Invalid created at",
		171:   "Query already processed",
		172:   "Invalid smart account address",
		173:   "Invalid message to send",
		174:   "Intent already processed",
		180:   "User signature invalid",
		190:   "Invalid sa address",
		191:   "Invalid direction",
		192:   "Not enough amount for gas",
		401:   "Unauthorized",
		402:   "Public key not found",
		403:   "Too many public keys",
		404:   "Vault not found",
		405:   "Not enough balance",
		406:   "Insufficient gas",
		407:   "Invalid query id",
		408:   "Invalid destination",
		409:   "Invalid position",
		410:   "Position not free",
		411:   "Invalid op",
		412:   "Parent query not processed",
		413:   "Invalid trader address",
		414:   "Invalid factory address",
		415:   "Invalid sender address",
		416:   "Too many referrers",
		417:   "Upgrade payload not found",
		418:   "New code not found",
		419:   "Invalid discount",
		420:   "Invalid rebate",
		421:   "Invalid actual version",
		422:   "Referrer data not found",
		423:   "Invalid referrer address",
		424:   "Invalid referrer parts",
		425:   "Incorrect spent amount",
		426:   "Too many intents",
		65535: "Wrong operation",
	},
	SmartAccountBlank: {401: "Unauthorized",
		65535: "Wrong operation",
	},
	SmartAccountFactory: {150: "Not enough gas to deploy",
		401:   "Unauthorized",
		406:   "Insufficient gas",
		710:   "Wrong workchain",
		65535: "Wrong operation",
	},
	StormExecutor: {351: "Not an owner",
		354:   "Wrong vault wc",
		357:   "Negative response value",
		358:   "Not a collection",
		359:   "Min add amount value",
		360:   "Vault was not added",
		361:   "Min ton for claim",
		362:   "Vault not found",
		65535: "Wrong operation",
	},
	StormExecutorCollection: {351: "Not an owner",
		352: "Provide vaults min value",
		353: "Unauthorized batch request",
		354: "Wrong vault wc",
		355: "Vault already added",
		356: "Min executor mint value",
	},
	StormPositionManager: {500: "Position locked",
		501:   "Not an amm",
		502:   "Not a trader",
		504:   "Not found",
		505:   "Position exists",
		507:   "Not a vault",
		508:   "Wrong order type",
		509:   "Order exists",
		510:   "Wrong order params",
		511:   "Position not found",
		512:   "Expired",
		513:   "No free order",
		514:   "Order not found",
		515:   "Vamm bounced",
		516:   "Max orders",
		517:   "Order canceled",
		518:   "Min provide gas",
		519:   "Min provide order gas",
		520:   "Min cancel order gas",
		521:   "Not a referral",
		522:   "Not inited",
		523:   "Position manager inited",
		524:   "Wrong init addr",
		525:   "Late migration",
		526:   "Direction mismatch",
		527:   "Market order canceled",
		65535: "Wrong operation",
	},
	StormReferral: {301: "Not an owner",
		303:   "Wrong vault wc",
		307:   "Can not transfer kol",
		308:   "Negative response value",
		309:   "Not a collection",
		311:   "Min add amount value",
		312:   "Min provide fees value",
		313:   "Vault was not added",
		314:   "Min ton for claim",
		315:   "Vault not found",
		316:   "Unauthorized batch request",
		65535: "Wrong operation",
	},
	StormReferralCollection: {301: "Not an owner",
		302:   "Provide vaults min value",
		303:   "Wrong vault wc",
		304:   "Vault already added",
		305:   "Min referral mint value",
		306:   "Wrong ref type",
		65535: "Wrong operation",
	},
	StormVamm: {157: "Invalid vault address",
		158:   "Invalid amm address",
		401:   "Not an admin",
		404:   "Not enough gas",
		405:   "Wrong position address",
		407:   "Not a vault",
		409:   "Less margin ratio",
		411:   "Wrong size",
		412:   "Position bad debt",
		413:   "Wrong position timestamp",
		414:   "Wrong amount",
		415:   "High price impact",
		416:   "Over spread limit",
		417:   "Over max open notional",
		418:   "Not executable by stop",
		419:   "Not executable",
		420:   "Wrong base asset reserve",
		421:   "Wrong quote asset reserve",
		422:   "Wrong id",
		423:   "Quorum failed",
		424:   "Invalid timestamp",
		425:   "Invalid diff",
		426:   "Wrong leverage",
		427:   "Slippage tolerance",
		428:   "Negative margin to trader",
		429:   "Order expired",
		430:   "Wrong liquidity",
		431:   "Invalid base asset amount",
		432:   "Paused",
		433:   "Close only",
		434:   "Market is active",
		435:   "Market is not active",
		436:   "Wrong referral item",
		437:   "Wrong executor item",
		438:   "Start already set",
		439:   "End already set",
		440:   "Not started",
		441:   "Ended",
		442:   "Wrong start date",
		443:   "Wrong end date",
		444:   "Wrong executor address",
		445:   "Direct increase disabled",
		446:   "Direct close disabled",
		447:   "Unknown oracle payload",
		448:   "Wrong single oracle payload",
		450:   "Wrong pause",
		451:   "Market paused",
		452:   "Not enough pnl",
		453:   "High cumulative price impact",
		454:   "Pause after unpause",
		455:   "Too close to liquidation",
		456:   "Unpause not defined",
		457:   "Invalid pause at",
		458:   "Invalid unpause at",
		459:   "Day trading disabled",
		460:   "Not close to pause",
		461:   "Not enough leverage",
		462:   "Invalid oracle timestamp",
		463:   "Margin above maintenance",
		470:   "Wrong smart account address",
		1000:  "Invalid message magic",
		1001:  "Invalid payload magic",
		1002:  "Invalid feeds count",
		1003:  "Invalid index feed id",
		1005:  "Invalid property count",
		1006:  "Invalid property id",
		1007:  "Invalid lazer signature",
		1008:  "Invalid vamm type",
		65535: "Wrong operation",
	},
	StormVammCoinm: {157: "Invalid vault address",
		158:   "Invalid amm address",
		401:   "Not an admin",
		404:   "Not enough gas",
		405:   "Wrong position address",
		407:   "Not a vault",
		409:   "Less margin ratio",
		411:   "Wrong size",
		412:   "Position bad debt",
		413:   "Wrong position timestamp",
		414:   "Wrong amount",
		415:   "High price impact",
		416:   "Over spread limit",
		417:   "Over max open notional",
		418:   "Not executable by stop",
		419:   "Not executable",
		420:   "Wrong base asset reserve",
		421:   "Wrong quote asset reserve",
		422:   "Wrong id",
		423:   "Quorum failed",
		424:   "Invalid timestamp",
		425:   "Invalid diff",
		426:   "Wrong leverage",
		427:   "Slippage tolerance",
		428:   "Negative margin to trader",
		429:   "Order expired",
		430:   "Wrong liquidity",
		431:   "Invalid base asset amount",
		432:   "Paused",
		433:   "Close only",
		434:   "Market is active",
		435:   "Market is not active",
		436:   "Wrong referral item",
		437:   "Wrong executor item",
		438:   "Start already set",
		439:   "End already set",
		440:   "Not started",
		441:   "Ended",
		442:   "Wrong start date",
		443:   "Wrong end date",
		444:   "Wrong executor address",
		445:   "Direct increase disabled",
		446:   "Direct close disabled",
		447:   "Unknown oracle payload",
		449:   "Wrong double oracle payload",
		450:   "Wrong pause",
		451:   "Market paused",
		452:   "Not enough pnl",
		453:   "High cumulative price impact",
		454:   "Pause after unpause",
		455:   "Too close to liquidation",
		456:   "Unpause not defined",
		457:   "Invalid pause at",
		458:   "Invalid unpause at",
		459:   "Day trading disabled",
		460:   "Not close to pause",
		461:   "Not enough leverage",
		462:   "Invalid oracle timestamp",
		463:   "Margin above maintenance",
		470:   "Wrong smart account address",
		1000:  "Invalid message magic",
		1001:  "Invalid payload magic",
		1002:  "Invalid feeds count",
		1003:  "Invalid index feed id",
		1004:  "Invalid settlement feed id",
		1005:  "Invalid property count",
		1006:  "Invalid property id",
		1007:  "Invalid lazer signature",
		1008:  "Invalid vamm type",
		65535: "Wrong operation",
	},
	StormVault: {100: "Invalid jetton",
		101:   "Invalid jetton amount",
		102:   "Not enough gas",
		103:   "Wrong position address",
		104:   "Not a vamm",
		106:   "Not a lp minter",
		107:   "Not an admin",
		108:   "Wrong referral item",
		109:   "Wrong executor item",
		110:   "Not a batch op",
		111:   "Wrong buffer params",
		112:   "Not a claimer",
		113:   "Jetton minter not found",
		114:   "Smart account factory not found",
		115:   "Keys setup not allowed",
		116:   "V3 paused",
		117:   "Invalid keys dict",
		65535: "Wrong operation",
	},
	StormVaultNative: {100: "Invalid jetton",
		101:   "Invalid jetton amount",
		102:   "Not enough gas",
		103:   "Wrong position address",
		104:   "Not a vamm",
		106:   "Not a lp minter",
		107:   "Not an admin",
		108:   "Wrong referral item",
		109:   "Wrong executor item",
		110:   "Not a batch op",
		111:   "Wrong buffer params",
		112:   "Not a claimer",
		113:   "Jetton minter not found",
		114:   "Smart account factory not found",
		115:   "Keys setup not allowed",
		116:   "V3 paused",
		117:   "Invalid keys dict",
		65535: "Wrong operation",
	},
	SubscriptionV2: {460: "Not enough funds",
		461: "Too early request",
		462: "Too many requests",
		463: "Sender is not wallet",
		464: "Not initialized",
		465: "Initialized",
		466: "Sender is not owner",
		467: "Sender is not beneficiary",
		468: "Invalid charging date",
		469: "Invalid reduce payment amount",
		470: "Subscription is not activated",
		471: "Wallet address is withdraw address",
	},
	WalletV4R2: {33: "Invalid seqno",
		34: "Invalid subwallet ID",
		35: "Invalid signature",
		36: "Expired message",
		39: "Plugin not found",
		80: "Not enough ton",
	},
}

var defaultExitCodes = map[int32]string{
	0:   "Ok",
	1:   "Ok",
	2:   "Stack underflow",
	3:   "Stack overflow",
	4:   "Integer overflow or division by zero",
	5:   "Integer out of expected range",
	6:   "Invalid opcode",
	7:   "Type check error",
	8:   "Cell overflow",
	9:   "Cell underflow",
	10:  "Dictionary error",
	11:  "Unknown error",
	12:  "Impossible situation error",
	13:  "Out of gas error",
	-14: "Out of gas error",
}

func GetContractError(interfaces []ContractInterface, code int32) *string {
	for _, i := range interfaces {
		if errors, ok := contractErrors[i]; ok {
			if msg, ok := errors[code]; ok {
				return &msg
			}
		}
	}
	if msg, ok := defaultExitCodes[code]; ok {
		return &msg
	}
	return nil
}
